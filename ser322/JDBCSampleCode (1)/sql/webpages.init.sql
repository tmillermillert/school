-- This script was confirmed loadable into Apache Derby 10.13.1.1 January 5, 2017

INSERT INTO WebPage Values ('http://pooh.east.asu.edu/~gary/cet4533/labs/lab7.tuple1.html',
'<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <!-- This is a sample file for insert into the WebPage table -->
   <TITLE>Oracle Corporation</TITLE>
   <META NAME="Author" CONTENT="">
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0Gold (Win95 I) [Netscape]">
</HEAD>
<BODY BGCOLOR="#FFFFFF" LINK="#000000">
<!-- The contents of this file are meaningless -->
<CENTER><TABLE CELLSPACING=0 CELLPADDING=0 >
<TR ALIGN=LEFT VALIGN=CENTER>
<TD VALIGN=TOP WIDTH="90"><img src="http://www.jpgs.com/gifs/contbig.jpg" HEIGHT=30 WIDTH=30/></TD>
<TD WIDTH="4"></TD>
<TD WIDTH="100%"><a href="http://www.oracle.com/index.html">Oracle Corporation</a><B><FONT COLOR="#00008B"><FONT SIZE=+2>Oracle Corporation</FONT></FONT></B></TD>
<TD WIDTH="4"></TD>
<TD WIDTH="4"></TD>
<TD WIDTH="4"></TD>
<TD WIDTH="4"></TD>
<TD WIDTH="4"></TD>
<TD WIDTH="4"></TD>
<TD><FONT SIZE=-2><a href="http://www.oracle.products.com/products.html">Library</a></FONT></TD>
<TD WIDTH="4"></TD>
<TD WIDTH="4"></TD>
</TR>
</TABLE></CENTER>
<P>
<!-- I love cet4533 -->
<HR NOSHADE WIDTH="100%"></P>
<P>
<H1>Oracle Corporation</H1>
<P>
<B>Trademark Information </B>
<P>
Copyright #169 1999, Oracle Corporation, All Rights Reserved.
<P>
<B>Limitation of Liability</B>
<P>
<FONT SIZE=-1>
This document is provided for informational purposes only and
the information herein is subject to change without notice. Please
report any errors herein to Oracle Corporation. Oracle Corporation
does not provide any warranties covering and specifically disclaims
any liability in connection with this document.
</FONT>
<BR>
<BR>
<B>REGISTERED TRADEMARKS of Oracle Corporation:</B>
<P>
<!-- Gosh I sure hope I get an A -->
<FONT SIZE=-1>
CASE Designer, CASE Dictionary, CASE Exchange, CASE Workshops,
</FONT>
<BR>
<P>
<B>NON-REGISTERED TRADEMARKS of Oracle Corporation: </B>
<P>
<FONT SIZE=-1>
Advanced Replication Option, AIM Advantage, Alexandria, Application
</FONT>
<BR>
<BR>
<P>
<B>SERVICE MARKS of Oracle Corporation:</B>
<FONT SIZE=-1>
<P>
CASE*Method, Oracle Alliance Program, Oracle Education, ORACLE
EXPRESS, Oracle Industries, Oracle Master, Real Time Support Services
<BR>
<!-- Dr Gary is the best -->
<P>
All other company or product names mentioned are used for identification
purposes only and may be trademarks of their respective owners.
<BR>
<P>
For more information about Oracle trademarks, or Oracleiacutes
intellectual property policies, contact the Oracle Legal Department
at (650) 506-5100.
</FONT>
<BR>
<P>
<HR NOSHADE WIDTH="98%" SHADE></P>
<CENTER><TABLE CELLSPACING=0 CELLPADDING=0 WIDTH="100%" >
<TR>
<TD ALIGN=LEFT VALIGN=TOP WIDTH="100%"><img src="http://www.oracle.com/jpegs/oracle.jpg" alt="Oracle Corporation"/><BR>
<B><FONT SIZE=-2>Copyright copy 1999 Oracle Corporation<BR>
500 Oracle Parkway, Redwood City, CA 94065</FONT></B></TD>
<TD ALIGN=CENTER VALIGN=TOP NOWRAP WIDTH="8%"><BR>
</TD>
<TD WIDTH="4"></TD>
<TD WIDTH="4"></TD>
<TD ALIGN=CENTER VALIGN=TOP NOWRAP WIDTH="8%"></TD>
<TD ALIGN=CENTER VALIGN=TOP NOWRAP WIDTH="8%"></TD>
<TD ALIGN=CENTER VALIGN=TOP NOWRAP WIDTH="8%"><BR>
</TD>
<TD ALIGN=CENTER VALIGN=TOP NOWRAP WIDTH="10%"><img src="http://www.oracle.com/jpegs/prodicon.jpg" alt="Product Documentation Library" BORDER=0 HEIGHT=30 WIDTH=30/><BR>
<FONT SIZE=-2><a href="http://www.oracle.com/products/products.html">Library</a></FONT></TD>
<TD WIDTH="4"></TD>
<TD WIDTH="4"></TD>
</TR>
</TABLE></CENTER>
<!-- End of file is near -->
</BODY>
</HTML>
');

INSERT INTO WebPage VALUES ('http://www.oracle.com/products/products.html',
'<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>Lab 7 tuple 2</TITLE>
   <META NAME="Author" CONTENT="">
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0Gold (Win95 I) [Netscape]">
</HEAD>
<BODY BGCOLOR="#FFFFFF" LINK="#000000">
<H2>This is the tuple referenced by URL http://www.oracle.com/products/products.html</H2>
<p>
Nothing important needs to go in here, just some miscellaneous stuff so we can
insert it as a CLOB and not a VARCHAR2> So the stuff below is junk.
</p>
<pre>
This is some really long character data
for teh sole purpose of being an example for Oracle
LOB functions.
TNSNAMES.ORA Network Configuration File: C:\Oracle\Ora81\NETWORK\ADMIN\tnsnames.ora
Generated by Oracle configuration tools.
CET4533.EAST.ASU.EDU =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = fezzik.east.asu.edu)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVICE_NAME = cet4533.fezzik.east.asu.edu)
    )
  )
CET433533.EAST.ASU.EDU =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCPS)(HOST = fezzik.east.asu.edu)(PORT = 2484))
    )
    (CONNECT_DATA =
      (SERVICE_NAME = cet4533.fezzik.east.asu.edu)
    )
  )
</pre>
<br>
<br>
<p><b>This is lobdemo1.sql</b></p>
<pre>
declare
	clob_var CLOB
	clob_var2 CLOB
	offset_var INTEGER
	length_var INTEGER
	compare_var INTEGER
	pattern_var VARCHAR2(5)
	str_var VARCHAR2(10)
begin
	offset_var := 1
	length_var := 10
	-- SELECT THE CLOB LOCATOR
	select image_analysis into clob_var from xrays where image_id = 1
end
</pre>
<br>
<ul>
</BODY>
</HTML>');

INSERT INTO WebPage VALUES ('http://www.oracle.products.com/products.html',
'
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>Lab 7 tuple 3</TITLE>
   <META NAME="Author" CONTENT="">
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0Gold (Win95 I) [Netscape]">
</HEAD>
<BODY BGCOLOR="#FFFFFF" LINK="#000000">
<H2>This is the tuple referenced by URL http://www.oracle.products.com/products.html</H2>
<p>
Nothing important needs to go in here, just some miscellaneous stuff so we can
insert it as a CLOB and not a VARCHAR2. So the stuff below is junk.
</p>
<p>
<b>This is from OUR SAMPLE java files</b>
<pre>
// TestXMLParse.java
//
// This file really has no significance
// we will use it to test CLOBs and BLOBs
package test.xml
import java.util.*
import java.io.*
import net.unicon.util.xml.*
import org.w3c.dom.*
// Here is the class
public class TestXMLParse {
	protected String DEFAULT_ANSWER = "**default answer**"
	protected HashMap correct
	protected int score
	protected String xml
	protected HashMap feedBackLink
	protected HashMap feedBacks
	private StringBuffer __readFile(String fname) throws IOException {
		StringBuffer sb = new StringBuffer()
		BufferedReader br = new BufferedReader(new FileReader(fname))
		String s = br.readLine()
		WHile (s != null) {
			sb.append(s)
			sb.append("\n")
			s = br.readLine()
		}
		return sb
	}
	public TestXMLParse(String fname) throws Exception {
		StringBuffer sb = __readFile(fname)
		correct = new HashMap()
		feedBackLink = new HashMap()
		feedBacks = new HashMap()
		xml = "<item>"+sb.toString()+"</item>"
		Document tree = DOMUtil.parse(new StringReader(xml), false)
		_parseCorrect(tree)
		_parseFeedback(tree)
	}
	/**
	 * Based on the xml tree that we find in the Item 
	 * tables lets find the various feedbacks.
	 */
	protected void _parseFeedback(Document tree) {
		NodeList itemFeedBacks = tree.getElementsByTagName("itemfeedback")
		for (int i = 0 i < itemFeedBacks.getLength() i++) {
			Node feedBackNode = itemFeedBacks.item(i)
			String id = DOMUtil.getAttributeValue(feedBackNode, "ident")
			String value = (new NodeToString(feedBackNode, true)).toString()
			feedBacks.put(id, value)
		}
		System.out.println("feedBacks = "+feedBacks)
	}
}
</pre>
<p>And again, this time test.java</p>
<pre>
import java.sql.*
import java.util.*
import org.w3c.dom.*
import net.unicon.util.xml.*
import net.unicon.util.*
import com.caucho.xpath.XPath
public class test {
    public static void main(String[] args) throws Exception {
	If (args.length == 0) {
	    System.out.println("usage: java -Dsystem.init=...  test filename <commit>")
	    return
	}
	Document dom = DOMUtil.parse(args[0], false)
	System.out.println("Connection to " + jdbcURL +"*"+ jdbcUser +"*"+ jdbcPass)
	Class.forName("oracle.jdbc.driver.OracleDriver")
	Connection conn=DriverManager.getConnection(jdbcURL,
						    jdbcPass,
						    jdbcUser)
	conn.setAutoCommit(false)
	ImportObject itemImporter = ItemImporter.getImportObject(XPath.find("descendant::course", dom), "out")
	itemImporter.importNode(XPath.find("descendant::course", dom), 1, conn, "out", "en")
	If ((args.length > 1)|("commit".equals(args[1]))) {
	    conn.commit()
	    System.out.println("Commit!")
	} ELSE {
	    System.out.println("Rollback"
	}
    }
}
</pre>
</BODY>
</HTML>');

INSERT INTO WebPage VALUES ('http://www.oracle.com/index.html',
'
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>Lab 7 tuple 3</TITLE>
   <META NAME="Author" CONTENT="">
   <META NAME="GENERATOR" CONTENT="Mozilla/3.0Gold (Win95 I) [Netscape]">
</HEAD>
<BODY BGCOLOR="#FFFFFF" LINK="#000000">
<H2>This is the tuple referenced by URL http://www.oracle.com/index.html</H2>
<p>
Nothing important needs to go in here, just some miscellaneous stuff so we can
insert it as a CLOB and not a VARCHAR2. So the stuff below is junk.
</p>
<p>
<b>This is from OUR SAMPLE java files</b>
<pre>
/*
Filename NodeToString.java
Some useful junk to follow:
fdsf
ds
fds
gvfd
sgfv
dgv
ds
gvfds
gf
***************
*/
package net.unicon.util.xml
import org.w3c.dom.*
import java.util.*
import java.io.*
public class NodeToString {
	protected Document doc
	protected HashMap stopTags
	protected HashMap emptyTags
	protected HashMap blankLineTags
	protected int startIndent
	protected int indent
	protected int tabStop
	protected StringWriter out
	protected boolean canonical
	public NodeToString(Document doc) {
		this.doc = doc
		startIndent = 0
		tabStop = 2
		canonical = true
		stopTags = new HashMap()
		emptyTags = new HashMap()
		blankLineTags = new HashMap()
	}
	public void setIndent(int indent){ startIndent = indent }
	public void setTabStop(int tabStop){ this.tabStop = tabStop }
	public void setCanonical(boolean canonical){ this.canonical = canonical }
	 * This sets the list of tags that should not be
	 * indented. this includes all tags under the included tags.
	 *
	 * @param list just the tag names
	 */
	public void setStopTags(List list) {
		stopTags = new HashMap()
		for (int i=0 i < list.size() i++) {
			stopTags.put(list.get(i), "x")
		}
	}
	/**
	 * This sets the tags that are allowed to be
	 * printed as <... /> IF they have no children or value.
	 * @param list
	 */
	public void setEmptyTags(List list) {
		emptyTags = new HashMap()
		for (int i=0 i < list.size() i++) {
			emptyTags.put(list.get(i), "x")
		}
	}
	/**
	 * This sets the tags that should have an extra blank line after the end tag.
	 * @param list
	 */
	public void setBlankLineTags(List list) {
		blankLineTags = new HashMap()
		for (int i=0 i < list.size() i++) {
			blankLineTags.put(list.get(i), "x")
		}
	}
	public String toString() {
		indent = startIndent
		out = new StringWriter()
		print(doc.getDocumentElement(), indent, tabStop, false)
		return out.toString()
	}
}
</pre>
<p>Same file again</p>
<pre>
/*
Filename NodeToString.java
Some useful junk to follow:
fdsf
ds
fds
gvfd
sgfv
dgv
ds
gvfds
gf
***************
*/
package net.unicon.util.xml
import org.w3c.dom.*
import java.util.*
import java.io.*
public class NodeToString {
	protected Document doc
	protected HashMap stopTags
	protected HashMap emptyTags
	protected HashMap blankLineTags
	protected int startIndent
	protected int indent
	protected int tabStop
	protected StringWriter out
	protected boolean canonical
	public NodeToString(Document doc) {
		this.doc = doc
		startIndent = 0
		tabStop = 2
		canonical = true
		stopTags = new HashMap()
		emptyTags = new HashMap()
		blankLineTags = new HashMap()
	}
	public void setIndent(int indent){ startIndent = indent }
	public void setTabStop(int tabStop){ this.tabStop = tabStop }
	public void setCanonical(boolean canonical){ this.canonical = canonical }
	/**
	 * This sets the list of tags that should not be
	 * indented. this includes all tags under the included tags.
	 *
	 */
	public void setStopTags(List list) {
		stopTags = new HashMap()
		for (int i=0 i < list.size() i++) {
			stopTags.put(list.get(i), "x")
		}
	}
	/**
	 * This sets the tags that are allowed to be
	 * printed as <... /> IF they have no children or value.
	 * @param list
	 */
	public void setEmptyTags(List list) {
		emptyTags = new HashMap()
		for (int i=0 i < list.size() i++) {
			emptyTags.put(list.get(i), "
		}
	}
}
</pre>
<br>
<ul> 
</BODY>
</HTML>');
commit;
